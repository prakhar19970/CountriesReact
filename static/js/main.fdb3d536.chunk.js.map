{"version":3,"sources":["components/header.js","components/searchBar.js","components/displayCountries.js","components/showCountries.js","components/singleCountrydetails.js","App.js","index.js"],"names":["CountriesHeader","className","this","props","darkMode","onClick","mode","aria-hidden","Component","SearchBar","class","type","name","onChange","searchFunction","placeholder","filterFunction","value","filterRegionData","map","data","index","Displaycountries","displayResults","length","cardData","id","callingCodes","src","flag","alt","to","style","textDecoration","color","population","region","capital","Showcountries","state","countriesData","countriesStructureDataFrame","searchInput","regionSelected","renderDiv","renderThis","countryName","regionName","filtercountry","filter","country","toLowerCase","includes","reStructureData","filterRegion","searchCountry","event","setState","target","console","log","allcountriesData","finalData","countryRow","push","regionShard","regions","regionContainer","regionData","Set","getallCountries","fetch","method","then","ok","json","res","SingleCountry","singleCountryData","currencies","topLevelDomain","borderCodes","borderCountries","languages","borderCountryfilter","filterCode","border","alpha3Code","getsingleCountry","match","params","getUrl","borders","nativeName","subregion","domain","currency","lang","borderCountry","CountriesApp","modeStatus","sessionStorage","getItem","setItem","appContainer","backgroundColor","path","render","exact","ReactDOM","document","getElementById"],"mappings":"iSAeeA,E,uKAVX,OACA,4BAAQC,UAAWC,KAAKC,MAAMC,SAAU,qCAAqC,oBACzE,yBAAKH,UAAU,gBAAf,uBACA,4BAAQA,UAAWC,KAAKC,MAAMC,SAAU,kCAAkC,gBAAiBC,QAASH,KAAKC,MAAMG,MAAM,8BAAM,uBAAGL,UAAU,eAAeM,cAAY,SAA9C,KAArH,kB,GANsBC,a,SCyBbC,E,uKAtBb,OACI,yBAAKR,UAAU,yBACb,yBAAKA,UAAWC,KAAKC,MAAMC,SAAU,6CAA6C,cAClF,uBAAGM,MAAM,uBACX,2BAAOC,KAAK,OAAOC,KAAK,SAASX,UAAWC,KAAKC,MAAMC,SAAU,yCAAyC,uBAAwBS,SAAUX,KAAKC,MAAMW,eAAgBC,YAAY,6BAEnL,yBAAKd,UAAU,YAGb,4BAAQA,UAAWC,KAAKC,MAAMC,SAAU,kCAAkC,gBAAiBS,SAAUX,KAAKC,MAAMa,gBAChH,4BAAQf,UAAU,gBAAgBgB,MAAM,IAAxC,UACGf,KAAKC,MAAMe,iBAAiBC,KAAI,SAACC,EAAKC,GAAN,OAC3B,4BAAQJ,MAAOG,GAAOA,a,GAfhBZ,a,iBC6BTc,E,uKA3BF,IAAD,OACR,OACQpB,KAAKC,MAAMoB,eAAeJ,KAAI,SAACC,EAAMC,GAAP,OAE1B,yBAAKpB,UAAYmB,EAAKI,OAAS,EAAI,kBAAmB,eACpDJ,EAAKD,KAAI,SAACM,EAASJ,GAAV,OACX,yBAAKK,GAAID,EAASE,aAAc1B,UAAYmB,EAAKI,OAAS,EAAK,EAAKrB,MAAMC,SAAU,oDAAoD,oBAAuB,EAAKD,MAAMC,SAAU,+CAA+C,iBACnO,yBAAKH,UAAU,oBAAmB,yBAAKA,UAAU,iBAAiB2B,IAAKH,EAASI,KAAMC,IAAI,kBAC1F,kBAAC,IAAD,CAAMC,GAAE,mBAAcN,EAASb,MAAQoB,MAAO,CAAEC,eAAgB,OAAQC,MAAO,EAAK/B,MAAMC,SAAU,mBAAmB,sBACvH,yBAAKH,UAAU,uBACf,yBAAKA,UAAU,sBACf,4BAAI,2BAAIwB,EAASb,QAEjB,6BACA,6BAAK,0CAAL,IAAyBa,EAASU,YAClC,6BAAK,sCAAL,IAAqBV,EAASW,QAC9B,6BAAK,uCAAL,IAAsBX,EAASY,wB,GAlBhB7B,aC8GhB8B,E,4MAlGXC,MAAM,CACFC,cAAe,GACfC,4BAA4B,GAC5BC,YAAY,GACZC,eAAe,I,EAGnBC,UAAU,WACN,IAAIC,EACEC,EAAc,EAAKP,MAAMG,YACzBK,EAAa,EAAKR,MAAMI,eAC/B,GAAGG,EAAYtB,OAAO,CACtB,IAAMwB,EAAgB,EAAKT,MAAMC,cAAcS,QAAO,SAAAC,GAE7C,OAAOA,EAAQtC,KAAKuC,cAAcC,SAASN,EAAYK,kBAC5DN,EAAY,kBAAC,EAAD,CAAkBtB,eAAgB,EAAK8B,gBAAgBL,GAAgB5C,SAAU,EAAKD,MAAMC,gBAEvG,GAAG2C,EAAWvB,OAAO,CACzB,IAAM8B,EAAc,EAAKf,MAAMC,cAAcS,QAAO,SAAAC,GAG5C,OAAOA,EAAQd,OAAOe,gBAAkBJ,EAAWI,iBAGxDN,EAAY,kBAAC,EAAD,CAAkBtB,eAAgB,EAAK8B,gBAAgBC,GAAelD,SAAU,EAAKD,MAAMC,gBAGvGyC,EAAY,kBAAC,EAAD,CAAkBtB,eAAgB,EAAKgB,MAAME,4BAA6BrC,SAAU,EAAKD,MAAMC,WAElH,OAAOyC,G,EAEPU,cAAc,SAACC,GAEX,EAAKC,SAAS,CAACf,YAAYc,EAAME,OAAOzC,S,EAG5CqC,aAAa,SAACE,GACTG,QAAQC,IAAIJ,EAAME,OAAOzC,OACtB,EAAKwC,SAAS,CAACd,eAAea,EAAME,OAAOzC,S,EAGnDoC,gBAAgB,SAACQ,GAIb,IAFA,IAAIC,EAAU,GACVC,EAAW,GACPb,EAAQ,EAAEA,EAAQW,EAAiBrC,OAAO0B,IAGrB,IAAtBa,EAAWvC,SAEVsC,EAAUE,KAAKD,GACfA,EAAW,IAEfA,EAAWC,KAAKH,EAAiBX,IAMrC,OAJGa,EAAWvC,QACVsC,EAAUE,KAAKD,GAGZD,G,EAGfG,YAAY,SAACC,GACT,IAAIC,EAAgB,GAInB,OAHDD,EAAQ/C,KAAI,SAACiD,EAAW/C,GAAZ,OACR8C,EAAgBH,KAAKI,EAAWhC,WACZ,YAAI,IAAIiC,IAAIF,K,EAGpCG,gBAAiB,WAEjB,OAAOC,MADG,uCACW,CACjBC,OAAQ,QACTC,MAAK,SAAArD,GACJ,GAAIA,EAAKsD,GACL,OAAOtD,EAAKuD,UAEjBF,MAAK,SAAAG,GACH,EAAKnB,SAAS,CAAEjB,cAAeoC,EAC5BnC,4BAA4B,EAAKY,gBAAgBuB,S,kEAlFrD1E,KAAKoE,oB,+BAwFT,OACI,yBAAKrE,UAAWC,KAAKC,MAAMC,SAAW,uCAAuC,wBAC1E,kBAAC,EAAD,CAAWU,eAAgBZ,KAAKqD,cAAerC,iBAAkBhB,KAAK+D,YAAY/D,KAAKqC,MAAMC,eAAgBxB,eAAgBd,KAAKoD,aAAclD,SAAUF,KAAKC,MAAMC,WACpK,yBAAKH,UAAU,0BACVC,KAAK0C,kB,GA/FMpC,aCiHbqE,E,4MAhHXtC,MAAM,CACFuC,kBAAkB,GAClBC,WAAY,GACZC,eAAe,GACfC,YAAY,GACZC,gBAAgB,GAChBC,UAAU,GACV3C,cAAc,I,EAElB4C,oBAAqB,WACjB,IAAIC,EAAW,GACX,EAAK9C,MAAM0C,YAAY9D,KAAI,SAACmE,EAAOjE,GAAR,OAE3BgE,EAAWrB,KAAK,EAAKzB,MAAMC,cAAcS,QAAO,SAAAC,GAC5C,OAAOA,EAAQqC,aAAeD,SAGtC,EAAK7B,SAAS,CAACyB,gBAAgBG,K,EAGnCf,gBAAiB,WAEb,OAAOC,MADG,uCACW,CACjBC,OAAQ,QACTC,MAAK,SAAArD,GACJ,GAAIA,EAAKsD,GACL,OAAOtD,EAAKuD,UAEjBF,MAAK,SAAAG,GACH,EAAKnB,SAAS,CAAEjB,cAAeoC,IAC/B,EAAKQ,0B,EAIdI,iBAAkB,WACd,IAAM1C,EAAc,EAAK3C,MAAMsF,MAAMC,OAAO9E,KACxC+E,EAAM,gDAA4C7C,EAA5C,kBAEN,OAAOyB,MAAMoB,EAAQ,CACrBnB,OAAQ,QACTC,MAAK,SAAArD,GACJ,GAAIA,EAAKsD,GACL,OAAOtD,EAAKuD,UAEjBF,MAAK,SAAAG,GACJjB,QAAQC,IAAIgB,GAEZjB,QAAQC,IAAIgB,GACZ,IAAM1B,EAAQ0B,EAAI,GACjB,EAAKnB,SAAS,CAAEqB,kBAAmB5B,EAChC6B,WAAW7B,EAAQ6B,WACvBC,eAAe9B,EAAQ8B,eACvBG,UAAUjC,EAAQiC,UAClBF,YAAY/B,EAAQ0C,UACnB,EAAKtB,sB,kEAzDVpE,KAAKsF,qB,+BA4DA,IAAD,OAEJ,OACI,yBAAKvF,UAAWC,KAAKC,MAAMC,SAAS,0CAA0C,2BAC9E,kBAAC,IAAD,CAAM2B,GAAG,IAAGC,MAAO,CAAEC,eAAgB,OAAQC,MAAM,sBAAsB,4BAAQjC,UAAWC,KAAKC,MAAMC,SAAU,uDAAwD,0BACzK,uBAAGH,UAAU,+BAAb,KADyE,SAIlE,yBAAKA,UAAU,yBACd,yBAAKyB,GAAIxB,KAAKqC,MAAMuC,kBAAkBnD,aAAc1B,UAAU,6BACtE,yBAAKA,UAAU,wBACX,yBAAK2B,IAAK1B,KAAKqC,MAAMuC,kBAAkBjD,KAAMC,IAAI,kBAErD,yBAAK7B,UAAU,+BACf,yBAAKA,UAAU,sBACX,4BAAI,2BAAIC,KAAKqC,MAAMuC,kBAAkBlE,QAEzC,yBAAKX,UAAU,uBACX,yBAAKA,UAAU,0BACX,6BAAK,2CAAL,IAA0BC,KAAKqC,MAAMuC,kBAAkBe,YACvD,6BAAK,0CAAL,IAAyB3F,KAAKqC,MAAMuC,kBAAkB3C,YACtD,6BAAK,sCAAL,IAAqBjC,KAAKqC,MAAMuC,kBAAkB1C,QAClD,6BAAK,0CAAL,IAAyBlC,KAAKqC,MAAMuC,kBAAkBgB,WACtD,6BAAK,uCAAL,IAAsB5F,KAAKqC,MAAMuC,kBAAkBzC,UAEvD,yBAAKpC,UAAU,2BACX,6BAAK,gDAAL,IAA+BC,KAAKqC,MAAMyC,eAAe7D,KAAI,SAAC4E,EAAO1E,GAAR,OAC7D,0BAAMK,GAAIL,GAAQ0E,OAElB,6BAAK,0CAAL,IAA0B7F,KAAKqC,MAAMwC,WAAW5D,KAAI,SAAC6E,EAAS3E,GAAV,OACpD,0BAAMK,GAAIL,GAAQ2E,EAASpF,UAC3B,6BAAK,yCAAL,IACIV,KAAKqC,MAAM4C,UAAUhE,KAAI,SAAC8E,EAAK5E,GAAN,OACrB,8BAAQA,EAAM,IAAM,EAAKkB,MAAM4C,UAAU3D,OAAQyE,EAAKrF,KAAOqF,EAAKrF,KAAK,YAInF,yBAAKX,UAAWC,KAAKqC,MAAM2C,gBAAgB1D,OAAS,yBAAyB,UACrE,yBAAKvB,UAAU,sBAAqB,iDACpC,yBAAKA,UAAU,iCAAiCC,KAAKqC,MAAM2C,gBAAgB/D,KAAI,SAAC+E,EAAc7E,GAAf,OAC3E6E,EAAc/E,KAAI,SAACM,EAASJ,GAAV,OACd,kBAAC,IAAD,CAAMU,GAAE,mBAAcN,EAASb,MAAQoB,MAAO,CAAEC,eAAgB,OAAQC,MAAO,EAAK/B,MAAMC,SAAU,mBAAmB,qBACvHH,UAAW,EAAKE,MAAMC,SAAU,yDAAyD,4BADzF,KACuH,yBAAMC,QAAS,kBAAK,EAAKmF,qBAClJ/D,EAASb,uB,GA1GXJ,a,gBCkDb2F,E,4MAjCX5D,MAAM,CACJnC,SAAS,I,EAEfgG,WAAW,WAE+B,SAAnCC,eAAeC,QAAQ,SACrBD,eAAeE,QAAQ,OAAQ,SAC/B,EAAK9C,SAAS,CAACrD,UAAS,MAGzBiG,eAAeE,QAAQ,OAAQ,QAC/B,EAAK9C,SAAS,CAACrD,UAAS,M,kEApBU,SAAnCiG,eAAeC,QAAQ,SACxBpG,KAAKuD,SAAS,CAACrD,UAAS,IACxBF,KAAKC,MAAMqG,aAAaxE,MAAMyE,gBAAiB,uBAG/CvG,KAAKuD,SAAS,CAACrD,UAAS,IACxBF,KAAKC,MAAMqG,aAAaxE,MAAMyE,gBAAiB,qB,+BAmB1C,IAAD,OAER,OAEE,yBAAKxG,UAAU,qBACb,kBAAC,EAAD,CAAiBK,KAAMJ,KAAKkG,WAAYhG,SAAUF,KAAKqC,MAAMnC,WAC7D,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOsG,KAAK,iBAAiBC,OAAQ,SAACxG,GAAD,OAAW,kBAAC,EAAD,iBAAmBA,EAAnB,CAA0BC,SAAU,EAAKmC,MAAMnC,eAC/F,kBAAC,IAAD,CAAOsG,KAAK,IAAIC,OAAQ,SAACxG,GAAD,OAAW,kBAAC,EAAD,iBAAmBA,EAAnB,CAA0BC,SAAU,EAAKmC,MAAMnC,aAAcwG,OAAK,U,GApChFpG,aCD3BqG,IAASF,OACP,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOA,OAAQ,SAACxG,GAAD,OAAW,kBAAC,EAAD,iBAAkBA,EAAlB,CAAyBqG,aAAcM,SAASC,eAAe,eAE7FD,SAASC,eAAe,W","file":"static/js/main.fdb3d536.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass CountriesHeader extends Component {\n\n    render(){\n    return(\n    <header className={this.props.darkMode? \"dark-mode-element countries-header\":\"countries-header\"}>\n        <div className=\"header-title\">Where in the world?</div>\n        <button className={this.props.darkMode? \"dark-mode-element btn white-btn\":\"btn white-btn\"} onClick={this.props.mode}><span><i className=\"fa fa-moon-o\" aria-hidden=\"true\"></i> </span>Dark Mode</button>\n    </header>\n);\n}\n}\n\n\nexport default CountriesHeader","import React, { Component } from 'react';\n\nclass SearchBar extends Component {\n\n    render(){\n    return(\n        <div className=\"d-flex search-wrapper\" >\n          <div className={this.props.darkMode? \"dark-mode-element input-area  dark-shadow \":\"input-area\"}>\n          <i class='fa fa-search fa-sm'></i>\n        <input type=\"text\" name=\"search\" className={this.props.darkMode? \"dark-mode-element countries-search-bar\":\"countries-search-bar\"} onChange={this.props.searchFunction} placeholder='Search for a country...'/>\n        </div>        \n        <div className=\"dropdown\">\n        {/* <label >Region\n        </label> */}\n          <select className={this.props.darkMode? \"btn white-btn dark-mode-element\":\"btn white-btn\"} onChange={this.props.filterFunction}>\n          <option className=\"btn white-btn\" value=''>Region</option>\n            {this.props.filterRegionData.map((data,index)=>(\n                  <option value={data}>{data}</option>\n            ))}\n        </select>\n        </div>\n     </div>\n    )\n    }\n}\n\n\n  export default SearchBar;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nclass Displaycountries extends Component {\n\n    render(){\n    return(\n            this.props.displayResults.map((data, index) =>\n                (  \n                <div className={(data.length < 4 ? 'new-country-row' :'country-row' )}>        \n                { data.map((cardData,index)=> (\n                <div id={cardData.callingCodes} className={(data.length < 4 ? (this.props.darkMode? 'dark-mode-element  dark-shadow  new-country-block':'new-country-block') :(this.props.darkMode? 'dark-mode-element  dark-shadow country-block':\"country-block\"))}>\n                <div className=\"country-flag-div\"><img className=\"curved-corners\" src={cardData.flag} alt=\"country flag\"/></div>\n                <Link to={`/country/${cardData.name}`} style={{ textDecoration: 'none', color:(this.props.darkMode ?'hsl(0, 0%, 100%)':'hsl(200, 15%, 8%)')}}>\n                <div className=\"country-details-div\">\n                <div className=\"country-name-title\">\n                <h6><b>{cardData.name}</b></h6>\n                </div>\n                <div>\n                <div><b>Population:</b> {cardData.population}</div>\n                <div><b>Region:</b> {cardData.region}</div>\n                <div><b>Capital:</b> {cardData.capital}</div>\n                </div>\n                \n                </div> \n                </Link>\n            </div>\n   ))}\n</div>\n    )))}\n}\n\nexport default Displaycountries;","\nimport React, { Component } from 'react';\nimport SearchBar from \"./searchBar\";\nimport { render } from '@testing-library/react';\nimport Displaycountries from './displayCountries';\n// import Searchedcountries from './searchedCountry';\n// import { Link } from 'react-router-dom'\n\nclass Showcountries extends Component {\n\n    componentDidMount() {\n        this.getallCountries()\n    }\n\n    state={\n        countriesData: [],\n        countriesStructureDataFrame:[],\n        searchInput:\"\",\n        regionSelected:\"\",\n    }\n\n    renderDiv=()=>{\n        let renderThis;\n        const countryName = this.state.searchInput;\n        const regionName = this.state.regionSelected;\n       if(countryName.length){\n       const filtercountry = this.state.countriesData.filter(country=>\n            {\n                return country.name.toLowerCase().includes(countryName.toLowerCase())}) \n           renderThis= <Displaycountries displayResults={this.reStructureData(filtercountry)} darkMode={this.props.darkMode}/>\n       }\n       else if(regionName.length){\n        const filterRegion= this.state.countriesData.filter(country=>\n            {\n\n                return country.region.toLowerCase() === regionName.toLowerCase()}) \n            //  console.log(\"---------->\",this.reStructureData(filtercountry)); \n\n           renderThis= <Displaycountries displayResults={this.reStructureData(filterRegion)} darkMode={this.props.darkMode}/>\n       }\n       else{\n           renderThis= <Displaycountries displayResults={this.state.countriesStructureDataFrame} darkMode={this.props.darkMode} />\n          }\n    return renderThis;\n    }\n    searchCountry=(event)=>{\n    // console.log(event.target.value);\n        this.setState({searchInput:event.target.value})\n    }\n\n    filterRegion=(event)=>{\n         console.log(event.target.value);\n            this.setState({regionSelected:event.target.value})\n        }\n\n    reStructureData=(allcountriesData)=>{\n        // console.log('allcountry----->',allcountriesData);\n        let finalData=[];\n        let countryRow=[];\n        for(let country=0;country<allcountriesData.length;country++)\n        {\n            //console.log(countryRow);\n            if(countryRow.length === 4)\n            {\n                finalData.push(countryRow);\n                countryRow=[];\n            }\n            countryRow.push(allcountriesData[country]);\n        }\n        if(countryRow.length){\n            finalData.push(countryRow);\n        }\n        // console.log(\"---finaldata--->\",finalData);\n        return finalData;\n    }\n\nregionShard=(regions)=>{\n    let regionContainer=[];\n    regions.map((regionData,index)=>(\n        regionContainer.push(regionData.region)))\n     let regionDatafiltered=[...new Set(regionContainer)]\n     return regionDatafiltered;\n}\n    getallCountries =() => {\n    let getUrl = `https://restcountries.eu/rest/v2/all`;\n    return fetch(getUrl, {\n        method: 'GET'\n    }).then(data => {\n        if (data.ok) {\n            return data.json();\n        }\n    }).then(res => {\n         this.setState({ countriesData: res,\n            countriesStructureDataFrame:this.reStructureData(res)})\n    });  \n}\n\nrender(){\n\n    return(\n        <div className={this.props.darkMode ? \"dark-background countries-outer-area\":\"countries-outer-area\"}>\n           <SearchBar searchFunction={this.searchCountry} filterRegionData={this.regionShard(this.state.countriesData)} filterFunction={this.filterRegion} darkMode={this.props.darkMode}/>\n            <div className=\"country-blocks-wrapper\">\n                {this.renderDiv()}\n            </div>\n        </div>\n        )\n         \n    }\n\n}\n\nexport default Showcountries; \n","import React, { Component } from 'react';\nimport { Link,NavLink, Redirect, Switch } from \"react-router-dom\";\n\nclass SingleCountry extends Component{\n    \n    componentDidMount(){\n        this.getsingleCountry() \n    }\n    \n    state={\n        singleCountryData:[],\n        currencies: [],\n        topLevelDomain:[],\n        borderCodes:[],\n        borderCountries:[],\n        languages:[],\n        countriesData:[]\n    }\n    borderCountryfilter =()=>{\n        let filterCode=[];\n            this.state.borderCodes.map((border,index)=>(\n                //console.log(border)\n            filterCode.push(this.state.countriesData.filter(country=>\n               {return country.alpha3Code === border})   \n            )\n            ))\n        this.setState({borderCountries:filterCode});\n        }\n\n    getallCountries =() => {\n        let getUrl = `https://restcountries.eu/rest/v2/all`;\n        return fetch(getUrl, {\n            method: 'GET'\n        }).then(data => {\n            if (data.ok) {\n                return data.json();\n            }\n        }).then(res => {\n             this.setState({ countriesData: res})\n             this.borderCountryfilter();\n        });\n    }\n\n    getsingleCountry =() => {\n        const countryName = this.props.match.params.name\n        let getUrl = `https://restcountries.eu/rest/v2/name/${countryName}?fullText=true`;\n       \n            return fetch(getUrl, {\n            method: 'GET'\n        }).then(data => {\n            if (data.ok) {\n                return data.json();\n            }\n        }).then(res => {\n            console.log(res);\n            // return res;\n            console.log(res);\n            const country=res[0];\n             this.setState({ singleCountryData: country,\n                currencies:country.currencies,\n            topLevelDomain:country.topLevelDomain,\n            languages:country.languages,\n            borderCodes:country.borders})\n             this.getallCountries() \n    })\n}\n    render(){\n        \n        return(\n            <div className={this.props.darkMode?\"country-deatils-wrapper dark-background\":\"country-deatils-wrapper\"}>\n            <Link to='/'style={{ textDecoration: 'none', color:'hsl(200, 15%, 8%)'}}><button className={this.props.darkMode? \"btn white-btn back-btn dark-mode-element dark-shadow\" :\"btn white-btn back-btn\"}>\n            <i className=\"fa fa-long-arrow-left fa-sm\"> </i>\n            Back</button></Link>\n            {\n                   <div className=\"country-details-outer\">\n                    <div id={this.state.singleCountryData.callingCodes} className=\"country-details-container\">  \n            <div className=\"country-details-flag\">\n                <img src={this.state.singleCountryData.flag} alt=\"country flag\"/>\n            </div>\n            <div className=\"country-details-outer-block\">\n            <div className=\"country-name-title\">\n                <h3><b>{this.state.singleCountryData.name}</b></h3>\n            </div>\n            <div className=\"country-summary-div\">\n                <div className=\"summary-left-inner-div\">\n                    <div><b>Native Name:</b> {this.state.singleCountryData.nativeName}</div>\n                    <div><b>Population:</b> {this.state.singleCountryData.population}</div>\n                    <div><b>Region:</b> {this.state.singleCountryData.region}</div>\n                    <div><b>Sub Region:</b> {this.state.singleCountryData.subregion}</div>\n                    <div><b>Capital:</b> {this.state.singleCountryData.capital}</div>\n                </div>\n                <div className=\"summary-right-inner-div\">\n                    <div><b>Top Level Domain:</b> {this.state.topLevelDomain.map((domain,index)=>(\n                    <span id={index}>{domain}</span>))}\n                    </div>\n                    <div><b>Currencies:</b> { this.state.currencies.map((currency,index)=>(\n                    <span id={index}>{currency.name}</span>))}</div>\n                    <div><b>Languages:</b> {\n                        this.state.languages.map((lang,index)=>(\n                            <span>{ index+1 === this.state.languages.length? lang.name : lang.name+', ' }</span>))}\n                    </div>\n                </div>\n                </div>\n                <div className={this.state.borderCountries.length ? 'border-country-wrapper':'d-none'}>\n                        <div className=\"d-flex border-area\"><b>Border Countries:</b></div>\n                        <div className=\"d-flex border-country-buttons\">{this.state.borderCountries.map((borderCountry,index)=>(\n                            borderCountry.map((cardData,index)=> (\n                                <Link to={`/country/${cardData.name}`} style={{ textDecoration: 'none', color:(this.props.darkMode ?'hsl(0, 0%, 100%)':'hsl(200, 15%, 8%)')}}\n                                className={this.props.darkMode? \"btn white-btn border-btn dark-mode-element dark-shadow\":\"btn white-btn border-btn\"}>  <div  onClick={()=> this.getsingleCountry()}>\n                             {cardData.name}</div></Link>\n                            ))\n                        ))}</div>\n                        </div>\n            </div>\n               </div>\n        </div>}\n        </div>\n        )\n}\n}\n\nexport default SingleCountry;\n\n// <div={`/country/${cardData.name}`} style={{ textDecoration: 'none', color:'hsl(200, 15%, 8%)'}}></div>\n\n ","import React, { Component } from 'react';\nimport CountriesHeader from './components/header'\nimport ShowCountries from \"./components/showCountries\"\nimport Singlecountry from \"./components/singleCountrydetails\"\n// import SearchBar from \"./components/searchBar\"\nimport './App.css';\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\n\nclass CountriesApp extends Component {\n \n  componentDidMount(){\n    if(sessionStorage.getItem(\"mode\") === 'dark'){\n      this.setState({darkMode:true});\n      this.props.appContainer.style.backgroundColor= \"hsl(207, 26%, 17%)\";\n    }\n    else{\n      this.setState({darkMode:false})\n      this.props.appContainer.style.backgroundColor= \"hsl(0, 0%, 98%)\";\n    }\n  }\n    state={\n      darkMode:''\n    }\nmodeStatus=()=>{\n//   console.log('yes it here ');\n    if(sessionStorage.getItem(\"mode\") === 'dark'){\n         sessionStorage.setItem(\"mode\", 'light');\n         this.setState({darkMode:false});       \n    }\n    else{\n        sessionStorage.setItem(\"mode\", 'dark');\n        this.setState({darkMode:true});   \n    }\n\n}\n\n  render(){\n    \n  return (\n    \n    <div className=\"countries-wrapper\">\n      <CountriesHeader mode={this.modeStatus} darkMode={this.state.darkMode} /> \n      <Switch>\n      <Route path=\"/country/:name\" render={(props) => <Singlecountry {...props} darkMode={this.state.darkMode} />}/>\n      <Route path=\"/\" render={(props) => <ShowCountries {...props} darkMode={this.state.darkMode} />} exact />\n      </Switch>\n    </div>\n  );\n  }\n}\n\n\n\nexport default CountriesApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CountriesApp from './App';\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n      <Route render={(props) => <CountriesApp {...props} appContainer={document.getElementById('root')} />} />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}